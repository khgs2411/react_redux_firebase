{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.jsx","components/layout/SingedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","store/actions/projectActions.jsx","components/projects/CreateProject.jsx","App.js","serviceWorker.js","store/reducers/authReducer.jsx","store/reducers/projectReducer.jsx","store/reducers/rootReducer.jsx","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProjAction","authorId","add","Date","CreateProject","createProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","rootElement","document","getElementById","firebaseAuthIsReady","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0QAgCeA,cACb,KAPyB,SAAAC,GACzB,MAAO,CACLC,QAAS,kBAAMD,ECXV,SAACA,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAIzBC,OACAH,UACAI,KAAK,WACJL,EAAS,CAAEM,KAAM,2BDQVP,CA5BO,SAAAQ,GACpB,OACE,wBAAIC,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASA,UAAU,qBAAqBC,GAAG,WAA3C,gBAIF,4BACE,uBAAGD,UAAU,qBAAqBE,QAASH,EAAMN,SAAjD,YAIF,4BACE,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,yCACvBD,EAAMI,QAAQC,cECVC,EAjBQ,WACrB,OACE,wBAAIL,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASA,UAAU,MAAMC,GAAG,WAA5B,WAIF,4BACE,kBAAC,IAAD,CAASD,UAAU,MAAMC,GAAG,WAA5B,YCoBOV,cAPS,SAAAe,GACtB,MAAO,CACLV,KAAMU,EAAMC,SAASX,KACrBO,QAASG,EAAMC,SAASJ,UAIbZ,CA1BA,SAAAQ,GAAU,IACfH,EAAkBG,EAAlBH,KAAMO,EAAYJ,EAAZI,QACRK,EAAQZ,EAAKa,IACjB,kBAAC,EAAD,CAAeN,QAASA,IAExB,kBAAC,EAAD,MAEF,OACE,yBAAKH,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,sBAAvB,wBAGCQ,M,yDCeME,EA/BO,SAAAX,GAAU,IACtBY,EAAkBZ,EAAlBY,cACR,OACE,yBAAKX,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAEZW,GAAiBA,EAAc,GAC9B,0BAAMX,UAAU,eAAhB,iBAEA,0BAAMA,UAAU,cAAhB,2BAEF,wBAAIA,UAAU,iBACXW,GACCA,EAAcC,IAAI,SAAAC,GAChB,OACE,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMf,UAAU,aAAaa,EAAKG,KAAlC,KACA,8BAAOH,EAAKI,SACZ,yBAAKjB,UAAU,uBACZkB,IAAOL,EAAKM,KAAKC,UAAUC,mBCNnCC,EAfQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,yBAAKvB,UAAU,kCACb,yBAAKA,UAAU,uCACb,0BAAMA,UAAU,cAAcuB,EAAQC,OACtC,wCACaD,EAAQE,gBADrB,IACuCF,EAAQG,gBAE/C,uBAAG1B,UAAU,aACVkB,IAAOK,EAAQI,UAAUP,UAAUQ,eCQ/BC,EAfK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,yBAAK9B,UAAU,wBACZ8B,GACCA,EAASlB,IAAI,SAAAW,GACX,OACE,kBAAC,IAAD,CAAMtB,GAAI,YAAcsB,EAAQR,GAAID,IAAKS,EAAQR,IAC/C,kBAAC,EAAD,CAAgBQ,QAASA,S,gBCH1BQ,EAAb,iLACY,IAAD,EACmCC,KAAKjC,MAAvC+B,EADD,EACCA,SAAUlC,EADX,EACWA,KAAMe,EADjB,EACiBA,cAExB,OAAKf,EAAKa,IAGR,yBAAKT,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAa8B,SAAUA,KAEzB,yBAAK9B,UAAU,wBACb,kBAAC,EAAD,CAAeW,cAAeA,OAThB,kBAAC,IAAD,CAAUV,GAAG,gBAJvC,GAA+BgC,aA6BhBC,cACb3C,YATsB,SAAAe,GACtB,MAAO,CACLwB,SAAUxB,EAAM6B,UAAUC,QAAQN,SAClClC,KAAMU,EAAMC,SAASX,KACrBe,cAAeL,EAAM6B,UAAUC,QAAQzB,iBAMzC0B,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJhDL,CAMbH,GCKaG,cACb3C,YAXsB,SAACe,EAAOmC,GAC9B,IAAM1B,EAAK0B,EAASC,MAAMC,OAAO5B,GAC3Be,EAAWxB,EAAM6B,UAAUS,KAAKd,SAEtC,MAAO,CACLP,QAFcO,EAAWA,EAASf,GAAM,KAGxCnB,KAAMU,EAAMC,SAASX,QAMvByC,2BAAiB,CAAC,CAAEC,WAAY,cAFnBJ,CAzCQ,SAAAnC,GAAU,IACvBwB,EAAkBxB,EAAlBwB,QACR,OAD0BxB,EAATH,KACPa,IACNc,EAEA,yBAAKvB,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cACbuB,EAAQC,MADX,MACqBzB,EAAM2C,MAAMC,OAAO5B,IAExC,2BAAIQ,EAAQN,UAEd,yBAAKjB,UAAU,mCACb,0CACauB,EAAQE,gBADrB,IACuCF,EAAQG,gBAE/C,iCAAOR,IAAOK,EAAQI,UAAUP,UAAUQ,eAOhD,yBAAK5B,UAAU,oBACb,kDAvBgB,kBAAC,IAAD,CAAUC,GAAG,c,QCJ/B4C,E,2MACJvC,MAAQ,CACNwC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAG1CC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKvD,MAAMwD,OAAO,EAAKjD,Q,wEAGf,IAAD,EACqB0B,KAAKjC,MAAzByD,EADD,EACCA,UACR,OAFO,EACY5D,KACVa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAGhC,6BACE,yBAAKD,UAAU,aACb,0BAAMyD,SAAUzB,KAAKqB,aAAcrD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,QAAQiB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAEhD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,YACA,2BACE5D,KAAK,WACLiB,GAAG,WACH4C,SAAU3B,KAAKgB,gBAGnB,yBAAKhD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACZwD,EAAY,2BAAIA,GAAiB,c,GAvC7BvB,aA8DN1C,cAbS,SAAAe,GACtB,MAAO,CACLkD,UAAWlD,EAAMV,KAAK4D,UACtB5D,KAAMU,EAAMC,SAASX,OAIE,SAAAJ,GACzB,MAAO,CACL+D,OAAQ,SAAAK,GAAK,OAAIpE,GR/DCqE,EQ+DeD,ER9D5B,SAACpE,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAIzBC,OACAkE,2BAA2BD,EAAYf,MAAOe,EAAYd,UAC1DlD,KAAK,WACJL,EAAS,CAAEM,KAAM,oBAElBiE,MAAM,SAAAC,GACLxE,EAAS,CAAEM,KAAM,cAAekE,aAXlB,IAAAH,KQmEPtE,CAGbsD,GCjEIoB,E,2MACJ3D,MAAQ,CACNwC,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAGZnB,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAG1CC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKvD,MAAMqE,OAAO,EAAK9D,Q,wEAGf,IAAD,EACqB0B,KAAKjC,MAAzBH,EADD,EACCA,KAAM4D,EADP,EACOA,UACd,OAAI5D,EAAKa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAEhC,6BACE,yBAAKD,UAAU,aACb,0BAAMyD,SAAUzB,KAAKqB,aAAcrD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,QAAQiB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAEhD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,YACA,2BACE5D,KAAK,WACLiB,GAAG,WACH4C,SAAU3B,KAAKgB,gBAGnB,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,aACA,2BAAO5D,KAAK,OAAOiB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAElD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,aAAf,cACA,2BAAO5D,KAAK,OAAOiB,GAAG,YAAY4C,SAAU3B,KAAKgB,gBAEnD,yBAAKhD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,YACA,yBAAKA,UAAU,mBACZwD,EAAY,2BAAIA,GAAiB,c,GAhD7BvB,aAuEN1C,cAbS,SAAAe,GACtB,MAAO,CACLV,KAAMU,EAAMC,SAASX,KACrB4D,UAAWlD,EAAMV,KAAK4D,YAIC,SAAAhE,GACzB,MAAO,CACL4E,OAAQ,SAAAC,GAAO,OAAI7E,ET3CD,SAAA6E,GACpB,OAAO,SAAC7E,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAa2E,EAAmB,EAAnBA,aACnC/D,EAAWZ,IACXwC,EAAYmC,IAElB/D,EACGX,OACA2E,+BAA+BF,EAAQvB,MAAOuB,EAAQtB,UACtDlD,KAAK,SAAA2E,GACJ,OAAOrC,EACJG,WAAW,SACXmC,IAAID,EAAKxD,KAAKP,KACdiE,IAAI,CACHR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB/D,SAAUiE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAGvDtE,KAAK,WACJL,EAAS,CAAEM,KAAM,qBAElBiE,MAAM,SAAAC,GACLxE,EAAS,CAAEM,KAAM,eAAgBkE,WSqBTI,CAAOC,OAIxB9E,CAGb0E,G,4NC/EK,IAAMU,EAAmB,SAAApD,GAC9B,OAAO,SAAC/B,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IAEvDwC,GAAYmC,EAF0C,EAAnBA,gBAGnCnE,EAAUT,IAAWa,SAASJ,QAC9ByE,EAAWlF,IAAWa,SAASX,KAAKa,IAC1C0B,EACGG,WAAW,YACXuC,I,qVAFH,IAGOtD,EAHP,CAIIE,gBAAiBtB,EAAQ+D,UACzBxC,eAAgBvB,EAAQgE,SACxBS,SAAUA,EACVjD,UAAW,IAAImD,QAEhBjF,KAAK,WACJL,EAAS,CAAEM,KAAM,iBAAkByB,cAEpCwC,MAAM,SAAAC,GACLxE,EAAS,CAAEM,KAAM,uBAAwBkE,YCd3Ce,E,2MACJzE,MAAQ,CACNkB,MAAO,GACPP,QAAS,I,EAGX+B,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAG1CC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKvD,MAAMiF,cAAc,EAAK1E,OAC9B,EAAKP,MAAMkF,QAAQC,KAAK,M,wEAKxB,OADiBlD,KAAKjC,MAAdH,KACEa,IAGR,6BACE,yBAAKT,UAAU,aACb,0BAAMyD,SAAUzB,KAAKqB,aAAcrD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,wBACA,yBAAKA,UAAU,eACb,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,OAAOiB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAE/C,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,WAAf,mBACA,8BACE3C,GAAG,UACHf,UAAU,uBACV2D,SAAU3B,KAAKgB,gBAGnB,yBAAKhD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,cApBY,kBAAC,IAAD,CAAUC,GAAG,gB,GAlBXgC,aA2Db1C,cAZS,SAAAe,GACtB,MAAO,CACLV,KAAMU,EAAMC,SAASX,OAIE,SAAAJ,GACzB,MAAO,CACLwF,cAAe,SAAAzD,GAAO,OAAI/B,EAASmF,EAAiBpD,OAIzChC,CAGbwF,GCzCaI,MAjBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKnF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAIC,UAAWvD,IACjC,kBAAC,IAAD,CAAOsD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWzC,IACjC,kBAAC,IAAD,CAAOwC,KAAK,UAAUC,UAAWrB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,UAAUC,UAAWP,QCPvBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2D,mjBClBN,IAAMkD,EAAY,CAChBpC,UAAW,MAwCEqC,EAtCK,WAAgC,IAA/BvF,EAA8B,uDAAtBsF,EAAWE,EAAW,uCACjD,OAAQA,EAAOhG,MACb,IAAK,cAGH,OAFAiG,QAAQC,IAAI,eAEL,KACF1F,EADL,CAEEkD,UAAW,iBAEf,IAAK,gBAEH,OADAuC,QAAQC,IAAI,gBACL,KACF1F,EADL,CAEEkD,UAAW,OAGf,IAAK,kBAEH,OADAuC,QAAQC,IAAI,cACL1F,EAET,IAAK,iBAEH,OADAyF,QAAQC,IAAI,kBACL,KACF1F,EADL,CAEEkD,UAAW,OAEf,IAAK,eAEH,OADAuC,QAAQC,IAAI,gBACL,KACF1F,EADL,CAEEkD,UAAWsC,EAAO9B,IAAIiC,UAG1B,QACE,OAAO3F,ICrCPsF,EAAY,CAChB9D,SAAU,CACR,CAAEf,GAAI,IAAKS,MAAO,cAAeP,QAAS,iBAC1C,CAAEF,GAAI,IAAKS,MAAO,eAAgBP,QAAS,kBAC3C,CAAEF,GAAI,IAAKS,MAAO,cAAeP,QAAS,mBAgB/BiF,EAbQ,WAAgC,IAA/B5F,EAA8B,uDAAtBsF,EAAWE,EAAW,uCACpD,OAAQA,EAAOhG,MACb,IAAK,iBAEH,OADAiG,QAAQC,IAAI,UAAWF,EAAOvE,SACvBjB,EACT,IAAK,uBAEH,OADAyF,QAAQC,IAAI,uBAAwBF,EAAO9B,KACpC1D,EACT,QACE,OAAOA,I,QCHE6F,EAPKC,YAAgB,CAClCxG,KAAMiG,EACNtE,QAAS2E,EACT/D,UAAWkE,mBACX9F,SAAU+F,oB,wCCIZ/F,IAASgG,cAVY,CACnBC,OAAQ,0CACRC,WAAY,6CACZC,YAAa,oDACbC,UAAW,6BACXC,cAAe,GACfC,kBAAmB,gBACnBC,MAAO,yCAITvG,IAAS4B,YAEM5B,QAAf,ECJMwG,EAAQC,YACZb,EACAjE,YACE+E,YAAgBC,IAAMC,kBAAkB,CAAExH,0BAAa2E,+BACvD8C,yBAAeC,GACfC,6BAAmBD,EAAU,CAC3BE,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,MAKnBC,EAAcC,SAASC,eAAe,QAC5Cb,EAAMc,oBAAoBhI,KAAK,WAC7BiI,IAASC,OACP,kBAAC,IAAD,CAAUhB,MAAOA,GACf,kBAAC,EAAD,OAEFW,GLiGE,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAMrI,KAAK,SAAAsI,GACjCA,EAAaC,mB","file":"static/js/main.893c463f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink className=\"btn-info btn-small\" to=\"/create\">\r\n          New Project\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <a className=\"btn-info btn-small\" onClick={props.signOut}>\r\n          Log Out\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn-small btn-floating blue lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink className=\"btn\" to=\"/signup\">\r\n          Signup\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink className=\"btn\" to=\"/signin\">\r\n          Login\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SingedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo-sm left\">\r\n          React-Redux-Firebase\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          {/* I could just check once and then return the whole template */}\r\n          {notifications && notifications[0] ? (\r\n            <span className=\"card-title \">Notifications</span>\r\n          ) : (\r\n            <span className=\"card-title\">No Notifications yet...</span>\r\n          )}\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-conent grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              {project.title} - {props.match.params.id}\r\n            </span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action ligthen-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div> {moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n              <div className=\"red-text center\">\r\n                {authError ? <p>{authError}</p> : null}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\r\n              <div className=\"red-text center\">\r\n                {authError ? <p>{authError}</p> : null}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","export const createProjAction = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // async database call\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProjAction } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Create a new Project</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"content\">Project Content</label>\r\n              <textarea\r\n                id=\"content\"\r\n                className=\"materialize-textarea\"\r\n                onChange={this.handleChange}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProjAction(project))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"Login Error\");\r\n\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"Login Sucess\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signed out\");\r\n      return state;\r\n\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signUP error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"First Title\", content: \"First Content\" },\r\n    { id: \"2\", title: \"Second Title\", content: \"Second Content\" },\r\n    { id: \"3\", title: \"Third Title\", content: \"Third Content\" }\r\n  ]\r\n};\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"Created\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"Create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBCWPotJccPT-2WTXeLTHRwGa3JKp9bAHg\",\r\n  authDomain: \"react-redux-firebase-c1f6f.firebaseapp.com\",\r\n  databaseURL: \"https://react-redux-firebase-c1f6f.firebaseio.com\",\r\n  projectId: \"react-redux-firebase-c1f6f\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"1009253999697\",\r\n  appId: \"1:1009253999697:web:a87c6a4b013402d1\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nconst rootElement = document.getElementById(\"root\");\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    rootElement\n  );\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}